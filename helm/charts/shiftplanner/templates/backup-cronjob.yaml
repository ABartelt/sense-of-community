apiVersion: batch/v1
kind: CronJob
metadata:
  name: shiftplanner-backup
  labels:
    app: shiftplanner
spec:
  schedule: "{{ .Values.backup.schedule }}"
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: backup
            image: postgres:15
            command: ["/bin/sh", "-c"]
            args:
            - |
              #!/bin/sh
              set -e
              
              # Create backup directory
              mkdir -p /backup
              
              # Backup ShiftPlanner database
              pg_dump -h shiftplanner-postgresql -U shiftplanner -d shiftplanner > /backup/shiftplanner_$(date +%Y%m%d_%H%M%S).sql
              
              # Backup Keycloak database
              pg_dump -h keycloak-postgresql -U keycloak -d keycloak > /backup/keycloak_$(date +%Y%m%d_%H%M%S).sql
              
              # Compress backups
              cd /backup
              tar czf backup_$(date +%Y%m%d_%H%M%S).tar.gz *.sql
              rm *.sql
              
              # Upload to S3
              aws s3 cp backup_*.tar.gz s3://{{ .Values.backup.s3Bucket }}/shiftplanner/
              
              # Cleanup old backups
              aws s3 ls s3://{{ .Values.backup.s3Bucket }}/shiftplanner/ | sort -r | tail -n +{{ add .Values.backup.keepBackups 1 }} | awk '{print $4}' | xargs -I {} aws s3 rm s3://{{ .Values.backup.s3Bucket }}/shiftplanner/{}
            env:
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: shiftplanner-postgresql
                  key: postgres-password
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: shiftplanner-backup
                  key: aws-access-key-id
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: shiftplanner-backup
                  key: aws-secret-access-key
            - name: AWS_DEFAULT_REGION
              value: {{ .Values.backup.awsRegion }}
          restartPolicy: OnFailure
          volumes:
          - name: backup
            emptyDir: {} 