version: '3.6'

services:
  keycloak:
    image: quay.io/keycloak/keycloak:22.0
    command: start --db=postgres --proxy edge --import-realm #see https://www.keycloak.org/server/configuration-production
    environment:
      KC_DB: postgres
      KC_DB_SCHEMA: public
      KC_DB_URL_HOST: postgres
      KC_DB_URL_PORT: 5432
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: 88kiiMvnrwoKQAL2
      KC_LOG_LEVEL: INFO
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: kbzdutVPTe6gZX8g
      KC_HTTP_ENABLED: "true"
      KC_HOSTNAME_STRICT: "false"
      KC_HOSTNAME_STRICT_HTTP: "false"
      KC_HOSTNAME: connect.technotuev.de
      KC_PROXY: edge
    depends_on:
      - postgres
    volumes:
      - ./config/keycloak:/opt/keycloak/data/import
    networks:
      - shiftplanner
      - proxy
    secrets:
      - keycloak_postgres_password
    labels:
      traefik.enable: "true"
      traefik.http.routers.shiftplanner-keycloak-https.rule: "Host(`connect.technotuev.de`)"
      traefik.http.routers.shiftplanner-keycloak-https.entrypoints: "websecure"
      traefik.http.routers.shiftplanner-keycloak-https.tls: "true"
      traefik.http.routers.shiftplanner-keycloak-https.tls.certresolver: "letsencrypt"
      traefik.http.services.shiftplanner-keycloak-https.loadbalancer.server.port: "8080"

  postgres:
    image: postgres:14
    environment:
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
      MUDDI_POSTGRES_USER_FILE: /run/secrets/muddi_postgres_user
      MUDDI_POSTGRES_PASSWORD_FILE: /run/secrets/muddi_postgres_password
      MUDDI_POSTGRES_DB_FILE: /run/secrets/muddi_postgres_db
      KEYCLOAK_POSTGRES_PASSWORD: /run/secrets/keycloak_postgres_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./config/postgres/initdb:/docker-entrypoint-initdb.d
    networks:
      - shiftplanner
    secrets:
      - postgres_password
      - muddi_postgres_user
      - muddi_postgres_password
      - muddi_postgres_db
      - keycloak_postgres_password
    labels:
      traefik.enable: "false"
  # Generate a sidecar service for backups of postgres database
  #  postgres-backup:
  #    image: postgres
  #    volumes:
  #      - /var/backup:/var/backup
  #      - ./config/postgres/backup_script.sh:/backup_script.sh
  #    depends_on:
  #      - postgres
  #    environment:
  #      POSTGRES_HOST: postgres
  #      POSTGRES_USER: postgres
  #      POSTGRES_PASSWORD: VGsjPU2YW3TGyJCi
  #      POSTGRES_DBS: "shift_planner keycloak"
  #    secrets:
  #      - postgres_password
  #    command: >
  #      bash -c "chmod +x /backup_script.sh && /backup_script.sh"
  #    networks:
  #      - shiftplanner
  #    labels:
  #      traefik.enable: "false"

  shift-planner-api:
    image: ghcr.io/muddi-markt/shiftplanner/api:v1.2
    environment:
      Database__USER: muddi
      Database__PASSWORD: noyFBj9Tzpw7Dare
      Database__Name: shift_planner
      Database__HOST: postgres
      Database__PORT: 5432
      #TODO: This needs to be set even when the section in appsettings.json is OAuth, but appssettings.json takes precedence
      MuddiConnect__AdminPassword: admin
      Cors__Origins__0: "https://doppelschicht.technotuev.de,https://connect.technotuev.de,localhost"
    depends_on:
      - keycloak
      - postgres
    networks:
      - shiftplanner
      - proxy
    secrets:
      - muddi_postgres_user
      - muddi_postgres_password
      - muddi_postgres_db
    labels:
      traefik.enable: "true"
      traefik.http.routers.shiftplanner-api-https.rule: "Host(`api-doppelschicht.technotuev.de`)"
      traefik.http.routers.shiftplanner-api-https.entrypoints: "websecure"
      traefik.http.routers.shiftplanner-api-https.tls: "true"
      traefik.http.routers.shiftplanner-api-https.tls.certresolver: "letsencrypt"
      traefik.http.services.shiftplanner-api-https.loadbalancer.server.port: "8080"

      traefik.http.middlewares.cors-middleware.headers.accesscontrolallowmethods: "GET,OPTIONS,PUT,DELETE"
      traefik.http.middlewares.cors-middleware.headers.accesscontrolallowheaders: "Accept,Authorization,Content-Type,Locatee-Smart-Signage-Token"
      traefik.http.middlewares.cors-middleware.headers.accesscontrolalloworiginlist: "https://doppelschicht.technotuev.de,https://connect.technotuev.de,localhost"
      traefik.http.middlewares.cors-middleware.headers.accesscontrolmaxage: "100"
      traefik.http.middlewares.cors-middleware.headers.addvaryheader: "true"
      traefik.http.routers.shiftplanner-api-https.middlewares: "cors-middleware"

  shift-planner-client:
    image: ghcr.io/muddi-markt/shiftplanner/client:v1.2
    volumes:
      - ./config/muddi/customization:/usr/share/nginx/html/customization
      - ./config/muddi/appsettings.json:/usr/share/nginx/html/appsettings.json
      #- ./config/muddi/favicon.png:/usr/share/nginx/html/favicon.png
      - ./config/muddi/manifest.json:/usr/share/nginx/html/manifest.json
    networks:
      - shiftplanner
      - proxy
    labels:
      traefik.enable: "true"
      traefik.http.routers.shiftplanner-client-https.rule: "Host(`doppelschicht.technotuev.de`)"
      traefik.http.routers.shiftplanner-client-https.entrypoints: "websecure"
      traefik.http.routers.shiftplanner-client-https.tls: "true"
      traefik.http.routers.shiftplanner-client-https.tls.certresolver: "letsencrypt"

volumes:
  postgres_data:


networks:
  shiftplanner:
  proxy:
    external: true

secrets:
  postgres_password:
    external: true
  keycloak_admin_password:
    external: true
  keycloak_postgres_password:
    external: true
  muddi_postgres_user:
    external: true
  muddi_postgres_password:
    external: true
  muddi_postgres_db:
    external:
