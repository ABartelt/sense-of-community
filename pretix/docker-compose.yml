# Postfix
version: '3'

services:
  # Postgres
  postgres:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_ADMIN_PASSWORD}
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - db-data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    labels:
      traefik.enable: "false"
    networks:
      - pretix
  # Generate a sidecar service for backups of postgres database
  postgres-backup:
    image: postgres
    volumes:
      - /var/backup:/var/backup
      - ./backup_script.sh:/backup_script.sh
    depends_on:
      - postgres
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_ADMIN_PASSWORD}
      POSTGRES_DB: ${PRETIX_POSTGRES_DB}
    command: >
      bash -c "chmod +x /backup_script.sh && /backup_script.sh"
    networks:
      - pretix
  # Redis
  redis:
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning
    volumes:
      - redis-data:/data
    networks:
      - pretix
    labels:
      traefik.enable: "false"

  # Pretix
  pretix:
    image: pretix/standalone:stable
    volumes:
      - pretix-data:/data
      - ./etc:/etc/pretix
    environment:
      PRETIX_HOSTNAME: ${PRETIX_HOSTNAME}
    networks:
      - proxy
      - pretix
    labels:
      traefik.enable: "true"
      # SSL Router and configuration
      traefik.http.routers.pretix-https.rule: "Host(`hu.technotuev.de`)"
      treafik.http.routers.pretix-https.entrypoints: "websecure"
      traefik.http.routers.pretix-https.tls: "true"
      traefik.http.routers.pretix-https.tls.certresolver: "letsencrypt"

      treafik.http.routers.pretix-http.rule: "Host(`hu.technotuev.de`)"
      treafik.http.routers.pretix-http.entrypoints: "web"
      # Create a middleware named `redirect-to-https` middleware to redirect from http to https
      traefik.http.middlewares.redirect-to-https.redirectscheme.scheme: "https"
      # Apply the middleware named `redirect-to-https` to the router named `pretix`
      #traefik.http.routers.pretix-http.middlewares: "redirect-to-https"
      traefik.http.routers.pretix-https.middlewares: "pretix-auth"
      # Note: when used in docker-compose.yml all dollar signs in the hash need to be doubled for escaping.
      # To create user:password pair, it's possible to use this command:
      # echo $(htpasswd -nB user) | sed -e s/\\$/\\$\\$/g
      #
      # Also note that dollar signs should NOT be doubled when they are not evaluated (e.g. Ansible docker_container module).
      traefik.http.middlewares.pretix-auth.basicauth.users: "mein:$$2y$$05$$1uNhZQOvaBe7CrfcBukG7e9deWDDGcV08EHhxA8rhRrw0wrjGdlGy"
volumes:
  db-data:
  redis-data:
  pretix-data:

networks:
  pretix:
  proxy:
    external: true